🧭 Roadmap: GitHub Contribution Tracker App (Desktop)
📌 App Features Overview
Feature	Description
🎯 Daily Check	If no contribution today, send system notification
📈 GitHub Stats GUI	Show today's status, recent activity, and graph
👤 User Token Input	Ask for GitHub username and token once
💾 Local Storage	Store config and last check locally
🪟 Desktop App	Cross-platform, self-contained executable
✅ No backend / 100% free	All logic happens on user device

🔧 Tools and Tech Stack
Component	Library / Tool
GUI	Tkinter (or PyQt5)
GitHub API	requests or PyGithub
Graph	matplotlib or Plotly
Notifications	plyer or win10toast (Windows)
Packaging	PyInstaller (to build .exe/.app)
Local Storage	json, sqlite3 (for settings/data)
Scheduler (optional)	schedule or threading.Timer

📅 Development Phases
🚀 Phase 1: MVP (Core Features)
✅ Features
Input GitHub username + PAT

Check if user contributed today

Show GUI with current status

System notification if no activity

🔨 Tasks
 Build simple Tkinter GUI

 Create config storage (JSON)

 Fetch today's contribution via API

 Show result in GUI

 Trigger notification if no code

📊 Phase 2: Graph & Stats
✅ Features
Show last 7/30 days contribution graph

Highlight today in green/red

Optional: Show total commits this year

🔨 Tasks
 Parse data from API (daily contributions)

 Render with matplotlib

 Embed chart in GUI (Tkinter canvas or image)

🔁 Phase 3: Background Reminder
✅ Features
App runs in background

Daily check at specific time

Tray icon (optional)

🔨 Tasks
 Use schedule or threading for daily check

 Use pystray (optional) to minimize to system tray

 Use plyer.notification to pop alert if no activity

🧪 Phase 4: Polish UX
✅ Features
Remember token & username securely

Add settings screen

Graceful error handling (no internet, bad token, etc.)

Simple light/dark theme (optional)

🔨 Tasks
 Store config in local encrypted file (or just JSON)

 Add retry or reconnect handling

 Use ttk themes or customtkinter for improved UI

📦 Phase 5: Packaging and Distribution
✅ Features
Build .exe (Windows) / .app (macOS) / binary (Linux)

Installable by end user with no setup

Host on GitHub or Itch.io

🔨 Tasks
 Use PyInstaller or briefcase to build executable

 Test on all 3 platforms

 Write a README + usage guide

 Upload binaries and publish

🔐 GitHub Token Handling (Best Practice)
Ask for Personal Access Token with read:user and repo scopes

Store token in local file or encrypted format

Warn user not to share token

🧠 Optional Bonus Features (Future)
Feature	Difficulty	Value
Smart commit reminders	Medium	💡 Useful
Weekly email reports	Hard (needs backend)	📨
Sync settings across devices	Hard	🌐
Dark mode UI	Easy	🌒 Aesthetic
GitHub OAuth login	Medium-Hard (needs web redirect flow)	🔐

📁 Recommended Folder Structure
css
Copy
Edit
github-tracker/
├── main.py
├── gui.py
├── github_api.py
├── notifier.py
├── graph.py
├── config.json
├── assets/
│   └── icon.png
├── requirements.txt
└── README.md
📍 Next Steps
✅ Start with Phase 1 – basic GUI + notification

🎨 Add graph using matplotlib

🕒 Add background daily check

📦 Package and distribute

🚀 Collect feedback and improve

